<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Dao.Mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.Dao.Model.UserModel">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, account, `password`, user_name, `role`, `state`
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="login" parameterType="com.example.demo.Dao.Model.UserModel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="recovery" parameterType="com.example.demo.Dao.Model.UserModel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectByAccount" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.example.demo.Dao.Model.UserModel" useGeneratedKeys="true">
    insert into user (account, `password`, user_name, 
      `role`, `state`)
    values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.example.demo.Dao.Model.UserModel" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.Dao.Model.UserModel">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.Dao.Model.UserModel">
    update user
    set account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>
