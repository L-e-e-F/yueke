<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Dao.Mapper.ApplyMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.Dao.Model.ApplyModel">
    <id column="apply_id" jdbcType="BIGINT" property="applyId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="course_time" jdbcType="TIMESTAMP" property="courseTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Base_Column_List">
    apply_id, course_id, course_name, teacher_id, teacher_name, user_id, user_name, `status`, 
    course_time, address
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply
  </select>
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByCourseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply
    where course_id = #{courseId,jdbcType=BIGINT}
  </select>
  <select id="selectByTeacherId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apply
    where teacher_id = #{teacherId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply
    where apply_id = #{applyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from apply
    where apply_id = #{applyId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="apply_id" keyProperty="applyId" parameterType="com.example.demo.Dao.Model.ApplyModel" useGeneratedKeys="true">
    insert into apply (course_id, course_name, teacher_id, 
      teacher_name, user_id, user_name, 
      `status`, course_time, address
      )
    values (#{courseId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR}, #{teacherId,jdbcType=BIGINT}, 
      #{teacherName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{courseTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="apply_id" keyProperty="applyId" parameterType="com.example.demo.Dao.Model.ApplyModel" useGeneratedKeys="true">
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.Dao.Model.ApplyModel">
    update apply
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where apply_id = #{applyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.Dao.Model.ApplyModel">
    update apply
    set course_id = #{courseId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      course_time = #{courseTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR}
    where apply_id = #{applyId,jdbcType=BIGINT}
  </update>
</mapper>
